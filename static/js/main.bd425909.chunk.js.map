{"version":3,"sources":["assets/alt_img.jpg","assets/location.svg","assets/favicon.ico","logo.svg","assets/portrait.jpg","assets/191116.jpg","assets/logo-main.png","components/Home.js","components/About.js","data/ProjectsData.js","components/IndivProject.js","components/Projects.js","data/ExperiencesData.js","components/IndivExperience.js","components/Experience.js","components/Footer.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","inlinePink","color","fontWeight","Home","className","style","href","target","rel","LinkedinFilled","id","GithubFilled","MailFilled","InstagramFilled","About","src","portrait_aq","ProjectsData","key","name","startDate","endDate","links","link","technologies","desc","milestone","demo","individualProject","display","flexDirection","marginBottom","IndivProject","props","setTwoToneColor","getTwoToneColor","parsedDescText","project","split","map","item","i","projectLinks","index","length","StarFilled","CodeFilled","paddingRight","undefined","Projects","projects","ExperiencesData","workplace","location","description","date","pinStyle","width","height","marginRight","headerCenter","textAlign","IndivExperience","LocationPin","Experience","experiences","Footer","Navigation","state","menuPressed","handleClick","bind","this","setState","prevState","console","log","to","onClick","MenuOutlined","float","fontSize","render","TransitionGroup","CSSTransition","timeout","classNames","path","React","Component","App","Helmet","content","type","favicon","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bd425909.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alt_img.d9014bd0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/location.d8450c0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/favicon.f372ddd5.ico\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/portrait.7a40e5dc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/191116.8dca98dd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo-main.54cebee3.png\";","import React, { useState, useEffect } from \"react\"\r\nimport \"../stylesheets/Theme.css\"\r\nimport \"../stylesheets/Home.css\"\r\nimport { LinkedinFilled, GithubFilled, MailFilled, FileFilled, InstagramFilled } from '@ant-design/icons'\r\nimport \"../stylesheets/HomeGraphics.css\"\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"\r\n\r\nconst inlinePink = {\r\n    color: '#F55379',\r\n    fontWeight: '600'\r\n}\r\n\r\nfunction Home() {\r\n    return (\r\n\r\n        <div className=\"wrapper-home\">\r\n\r\n            <div className=\"content-home\">\r\n                <div className=\"default-title\">\r\n                    Hi, I'm Ivy!\r\n                </div>\r\n\r\n                {/* <div className=\"default-header\">\r\n                    I create & develop software.\r\n\r\n                </div> */}\r\n\r\n                <div className=\"default-desc\">\r\n                    I'm a   &lt; <span style={inlinePink}>  software engineer </span>/&gt;  based in San Francisco\r\n                    and a recent graduate from UC Santa Cruz where I studied Computer Science. \r\n                    I strive to create engaging and meaningful\r\n                    user experiences through \r\n                    <span style ={inlinePink}> web development </span>\r\n                    and \r\n                    <span style ={inlinePink}> front end design; </span> \r\n                    bringing any ideas to life\r\n                    from paper to screen. \r\n\r\n                </div>\r\n\r\n                <div className=\"media-icons-container\">\r\n                    <a href=\"https://linkedin.com/in/ivyla\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <LinkedinFilled className=\"media-icons\" id=\"linkedin-icon\" />\r\n                    </a>\r\n                    <a href=\"https://github.com/ivyla\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <GithubFilled className=\"media-icons\" id=\"github-icon\" />\r\n                    </a>\r\n\r\n                    <a href=\"mailto:ila@ucsc.edu\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <MailFilled className=\"media-icons\" id=\"email-icon\" />\r\n                    </a>\r\n\r\n                    <a href=\"https://www.instagram.com/stegoivysaur/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <InstagramFilled className=\"media-icons\" id=\"instagram-icon\" />\r\n                    </a>\r\n\r\n                </div>\r\n                {/* linkedin github email resume */}\r\n\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Home","import React from \"react\";\r\nimport \"../stylesheets/Theme.css\";\r\nimport \"../stylesheets/About.css\";\r\nimport portrait_alt from \"../assets/portrait.jpg\";\r\nimport portrait from \"../assets/191116.jpg\";\r\nimport portrait_aq from \"../assets/alt_img.jpg\";\r\n\r\nfunction About() {\r\n    return (\r\n        <div className=\"transition-wrapper\">\r\n            <div className=\"wrapper-about\">\r\n                <div className=\"content-about\">\r\n                    <div className=\"name-and-desc-about\">\r\n                        <div className=\"default-title\">\r\n                            <span className=\"title-padding-center\">\r\n                                About Me\r\n\r\n                        </span>\r\n                        </div>\r\n                        <div className=\"default-desc\">\r\n                        From tweaking the HTML in my old MySpace profiles to tirelessly studying\r\n                         algorithms and computer systems, I've always been fascinated with \r\n                         technology and how it works behind the scenes. Currently, I'm seeking software \r\n                         engineering roles, focusing on growing my Javascript skills, and dabbling in user \r\n                         interface design! Aside from web development, I also love learning about computer\r\n                          networks, computer graphics, user experience design, and animation.\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"about-image\">\r\n                        <img src={portrait_aq} />\r\n                        {/* image */}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","const ProjectsData = [\r\n    {\r\n        key: 2,\r\n        name: \"ivyla.me (Personal Website)\",\r\n        startDate: \"Jun. 2019\",\r\n        endDate: \"Present\",\r\n        links: [{name: \"Github  \", link: \"https://github.com/ivyla/ivyla.github.io\"}, {name: \"Web Design  \", link: \"https://xd.adobe.com/view/d66c3a23-b657-4cb1-7cec-432634c5a8f3-a05d/\"}],\r\n        technologies: \"HTML, CSS, Javascript, React\",\r\n        desc: `I built & designed this website from scratch to showcase my front end skills and provide a central place for others to learn more about me! I utilized the React.js framework, created high fidelity mockups using Adobe Xd, and developed the site to be fully responsive. `,\r\n        milestone: \"\",\r\n        demo: \"\"\r\n    },\r\n\r\n    {\r\n        key: 1,\r\n        name: \"Rent-A-Driveway (R.A.D)\",\r\n        startDate: \"Sept. 2019\",\r\n        endDate: \"Present\",\r\n        links: [{name: \"Presentation\", link: \"https://docs.google.com/presentation/d/18z0slzJqbJsszi2f362sGEycCPYOOROr73kmdtLLrUk/edit?usp=sharing\"}, {name: \"Poster\", link: \"https://docs.google.com/presentation/d/1TTCm3boRhFMU7ZIW47mZuz1chMMkxtGQ4POKX7DZcOE/edit?usp=sharing\"}],\r\n        technologies: \"Flutter, Google Firebase, Google Maps API, Git, React\",\r\n        desc: `A student-led mobile application that connects drivers to unused driveways by providing a service to post and rent listings. Throughout the year, my team and I consistently followed agile development practices, maintained a task board, and wrote detailed documentation on release planning. I took on Full Stack development and developed the app's informational site the following summer using React.js.`,\r\n        milestone: \"  Senior Capstone Project\",\r\n        demo: \"\"\r\n\r\n    },\r\n\r\n    {\r\n        key: 3,\r\n        name: \"Clean This Space!\",\r\n        startDate: \"Jan. 2020\",\r\n        endDate: \"\",\r\n        links: [{name: \"Github\", link: \"https://github.com/ivyla/Clean-This-Space\"}, {name: \"Devpost\", link: \"https://devpost.com/software/temp-2k3y9e\"}],\r\n        technologies: \"Javascript, React, Google Maps API\",\r\n        desc: `A native web application that enables environmental activism by crowdsourcing conscious donors. In 24 hours, my team and I built the front end of the app. I styled the landing page while optimizing responsiveness on mobile and web screens. I got a chance to adapt to React's development environment, experiment with the Ant Design component library, and reinforce my CSS knowledge.\r\n          `,\r\n        milestone: \"  CruzHacks 2020 3rd Place Winner - Best Earth Hack\",\r\n        demo: \"\"\r\n\r\n    },\r\n    {\r\n        key: 3,\r\n        name: \"Multithreaded HTTP Server\",\r\n        startDate: \"Sept. 2019\",\r\n        endDate: \"Dec. 2019\",\r\n        links: [],\r\n        technologies: \"C++, Socket Programming\",\r\n        desc: \"This server sends and responds HTTP requests with methods such as GET, POST, and PUT. It implements some key principles of computer systems design through cache coherency, thread synchronization, and abstraction via the client-server model. Additional features include generated request logs and HTTP header parsing.\",\r\n        milestone: \"\",\r\n        demo: \"\"\r\n\r\n    }\r\n]\r\n\r\nexport default ProjectsData","import React from \"react\"\r\nimport { render } from \"@testing-library/react\"\r\nimport \"../stylesheets/Theme.css\"\r\n\r\nimport { LinkOutlined, CodeFilled, CodeTwoTone, FileExcelFilled, StarFilled, StarTwoTone, getTwoToneColor, setTwoToneColor} from \"@ant-design/icons\"\r\nconst individualProject = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: '2.7vw'\r\n}\r\n\r\nfunction IndivProject(props) {\r\n    setTwoToneColor('#FAB82A');\r\n    const milestoneColor = getTwoToneColor(); \r\n    setTwoToneColor('#989BE6');\r\n    const commandColor = getTwoToneColor();\r\n\r\n    const parsedDescText = props.project.desc.split(\"\\n\").map((item, i) => {\r\n        return <div key={i}>{item} </div>;\r\n    });\r\n\r\n    const projectLinks = props.project.links.map((link, index)=> \r\n    <a href={link.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"linkStyling\"> \r\n    <span className=\"linkText\">\r\n        {link.name}\r\n\r\n    </span>\r\n        {index != props.project.links.length - 1 ? ' | '  : ' '}\r\n    </a>)\r\n    return (\r\n        <div>\r\n            <div style={individualProject}>\r\n                <div className=\"project-metadata\">\r\n                    <div className=\"default-header\">\r\n                        {props.project.name}\r\n                    </div>\r\n\r\n                    <div className=\"default-desc\">\r\n                        <i>\r\n                            {props.project.startDate} {props.project.endDate ?  '-' : ' ' } {props.project.endDate}\r\n                        </i>\r\n                    </div>\r\n                </div>\r\n                    <div className = \"default-desc\">\r\n                        <span style = {props.project.milestone ? {display: 'block'} : {display: 'none'}}>\r\n                            <StarFilled style={{color: '#FAB82A'}}/>\r\n                            {props.project.milestone}\r\n                        </span>\r\n                    \r\n                    </div> \r\n\r\n                {/* <StarTwoTone /> */}\r\n\r\n                <div className=\"default-desc\">\r\n                    {parsedDescText}\r\n                    <p>\r\n                    <CodeFilled style={{color: 'rgb(125 125 158)', paddingRight: '0.35em'}} />\r\n                        {props.project.technologies}\r\n                    </p>\r\n                <div style={props.project.links === undefined || props.project.links.length == 0 ? {display: 'none'} : {display: 'block'}} className=\"linksContent\">\r\n                    {projectLinks}\r\n                </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndivProject","import React from \"react\"\r\nimport \"../stylesheets/Theme.css\"\r\nimport \"../stylesheets/Projects.css\"\r\n\r\nimport ProjectsData from \"../data/ProjectsData\"\r\nimport IndivProject from \"./IndivProject\"\r\n\r\nfunction Projects() {\r\n    // create a variable that is assigned to map function \r\n    // insert map function that reads from ./data/ProjectsData directly\r\n    const projects = ProjectsData.map((item) => <IndivProject key={item.key} project={item} />)\r\n    return (\r\n        <div className=\"transition-wrapper\">\r\n\r\n            <div className=\"wrapper-projects\" >\r\n                <div className=\"content-projects\">\r\n                    <div className=\"default-title\">\r\n                        <div className=\"title-padding-left\">\r\n                            Projects\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"projects-all\">\r\n                        {projects}\r\n                    </div>\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects","const ExperiencesData = [\r\n    {\r\n        key: 1,\r\n        workplace: \"Tech4Good Lab\",\r\n        location: \"Santa Cruz, CA\",\r\n        description: \"I collaborated with other passionate students in conducting user experience research for their reading group, Collectively. I also participated in Collectively and had the opportunity to discuss and summarize research papers about human computer interaction (HCI). Additionally, I worked on providing user authentication for their web platform, Causeway, using Google Firebase.\",\r\n        date: \"Jan. 2019 - Jun. 2019\",\r\n        link: \"https://tech4good.soe.ucsc.edu/#/\"\r\n    },\r\n\r\n    {\r\n        key: 2,\r\n        workplace: \"Salesforce\",\r\n        location: \"San Francisco, CA\",\r\n        description: \"I was a Tech & Product Cloud intern where I joined the Salesforce Search team. I shadowed software and QA engineers and had the opportunity to learn what responsibilities they handle on a daily basis. I also worked with other interns on professional development fundamentals such as networking, developing a personal brand, and public speaking. Ultimately, this opportunity inspired me to pursue a career in tech.\",\r\n        date: \"Jul. 2015 - Aug. 2015\",\r\n        link: \"https://www.salesforce.com/\"\r\n    },\r\n\r\n]\r\n\r\nexport default ExperiencesData","import React from \"react\"\r\nimport \"../stylesheets/Theme.css\"\r\nimport \"../stylesheets/Projects.css\"\r\n\r\nimport LocationPin from \"../assets/location.svg\"\r\n\r\nconst pinStyle = {\r\n    width: '0.8rem',\r\n    height: '0.8rem',\r\n    marginRight: '5.5px',\r\n}\r\n\r\nconst headerCenter = {\r\n    textAlign: 'center'\r\n}\r\nfunction IndivExperience(props) {\r\n    return (\r\n        <div className=\"wrapper-indivExperience\">\r\n            {/* <div> */}\r\n            <div className=\"default-header\" style={headerCenter}>\r\n                {/* <div> */}\r\n                {/* <a href={props.item.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"default-header\" > */}\r\n                    {props.item.workplace}\r\n                {/* </a> */}\r\n                {/* </div> */}\r\n            </div >\r\n\r\n            <div className=\"experience-metadata\">\r\n\r\n                <div className=\"default-desc\">\r\n                    <img src={LocationPin} style={pinStyle} />\r\n                    {props.item.location}\r\n                </div>\r\n\r\n                <div className=\"default-desc\">\r\n                    {props.item.date}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"default-desc\">\r\n                {props.item.description}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndivExperience","import React from \"react\"\r\nimport \"../stylesheets/Theme.css\"\r\nimport \"../stylesheets/Experience.css\"\r\n\r\nimport ExperiencesData from \"../data/ExperiencesData\"\r\nimport IndivExperience from \"./IndivExperience\"\r\n\r\n\r\n// const experienceContainer = {\r\n//     marginBottom: '45px'\r\n// }\r\n\r\nfunction Experience() {\r\n    const experiences = ExperiencesData.map((item) => <IndivExperience key={item.key} item={item} />)\r\n    return (\r\n        <div className=\"transition-wrapper\">\r\n\r\n            <div className=\"wrapper-experience\">\r\n                <div className=\"experience-content\">\r\n                    <div className=\"default-title\">\r\n                        <div className=\"title-padding-center\">\r\n                            <div className=\"experience-title\">\r\n                                Experience\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    {experiences}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Experience","import React from \"react\"\r\nimport \"../stylesheets/Theme.css\"\r\n\r\nconst footerStyle = {\r\n    color: 'red'\r\n}\r\nfunction Footer () {\r\n    return(\r\n        <div style={footerStyle}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\"\r\nimport { render } from \"@testing-library/react\"\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport Home from \"./Home\"\r\nimport About from \"./About\"\r\nimport Projects from \"./Projects\"\r\nimport Experience from \"./Experience\"\r\nimport Footer from \"./Footer\"\r\n\r\nimport \"../stylesheets/Navigation.css\"\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport { MenuOutlined } from '@ant-design/icons'\r\n\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"\r\nimport logo from \"../assets/logo-main.png\"\r\nclass Navigation extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            menuPressed: false\r\n        }\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState((prevState) => ({ menuPressed: !prevState.menuPressed }))\r\n        console.log(\"clicked!\" + this.state.menuPressed);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"navbar-wrapper\">\r\n                <Router>\r\n                    {/* <div className=\"position-nav\"> */}\r\n                    <div className={this.state.menuPressed ? \"position-nav-slideout\" : \"position-nav\"}>\r\n                        <div className=\"navbar-content\">\r\n                            {/* <header> */}\r\n                            <div className=\"nav-icon\">\r\n                                <NavLink className=\"navItem\" id=\"icon-styling\" to=\"/\">\r\n                                    il\r\n                                </NavLink>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"nav-links\">\r\n                                <NavLink className=\"navItem\" to=\"/\">\r\n                                    {/* <b> */}\r\n                                        home\r\n                                        {/* </b> */}\r\n                                </NavLink>\r\n                                <NavLink className=\"navItem\" to=\"/about\">\r\n                                    {/* <b> */}\r\n                                        about\r\n                                        {/* </b> */}\r\n                                </NavLink>\r\n                                <NavLink className=\"navItem\" to=\"/projects\">\r\n                                    {/* <b> */}\r\n                                        projects\r\n                                        {/* </b> */}\r\n                                </NavLink>\r\n                                <NavLink className=\"navItem\" to=\"/experience\">\r\n                                    {/* <b> */}\r\n                                         experience\r\n                                         {/* </b> */}\r\n                                </NavLink>\r\n                            </div>\r\n                            <div className=\"hamburger-menu\">\r\n                                <a href=\"#\" onClick={this.handleClick}>\r\n                                    <MenuOutlined style={{\r\n                                        color: 'white',\r\n                                        float: 'right',\r\n                                        fontSize: '20px'\r\n                                    }} />\r\n                                </a>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"slideout\">\r\n                            <div className=\"nav-links-slideout\" style={this.state.menuPressed ? { display: 'flex', flexDirection: 'column' } : { display: 'none' }}>\r\n                                <NavLink className=\"navItem\" to=\"/\">\r\n                                    <b>\r\n                                        home\r\n                                        </b>\r\n                                </NavLink>\r\n                                <NavLink className=\"navItem\" to=\"/about\">\r\n                                    <b>\r\n                                        about\r\n                                        </b>\r\n                                </NavLink>\r\n                                <NavLink className=\"navItem\" to=\"/projects\">\r\n                                    <b>\r\n                                        projects\r\n                                        </b>\r\n                                </NavLink>\r\n                                <NavLink className=\"navItem\" to=\"/experience\">\r\n                                    {/* <b> */}\r\n\r\n                                        experience\r\n\r\n                                         {/* </b> */}\r\n                                </NavLink>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    {/* </header> */}\r\n                    <Route render={({ location }) => (\r\n                        < TransitionGroup >\r\n                            <CSSTransition\r\n                                key={location.key}\r\n                                timeout={500}\r\n                                classNames=\"fade\">\r\n                                <Switch location={location}>\r\n                                    <Route path=\"/about\">\r\n                                        <About />\r\n                                    </Route>\r\n                                    <Route path=\"/projects\">\r\n                                        <Projects />\r\n                                    </Route>\r\n                                    <Route path=\"/experience\">\r\n                                        <Experience />\r\n                                    </Route>\r\n                                    <Route path=\"/\">\r\n                                        <Home />\r\n                                    </Route>\r\n                                </Switch>\r\n\r\n                            </CSSTransition>\r\n\r\n                        </TransitionGroup>\r\n                    )}>\r\n\r\n                    </Route>\r\n                </Router >\r\n            </div >\r\n        )\r\n\r\n    }\r\n}\r\nexport default Navigation","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport Navigation from './components/Navigation';\r\nimport { Helmet } from \"react-helmet\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport favicon from \"./assets/favicon.ico\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Helmet>\r\n        <title> ivyla.me </title>\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <link rel=\"icon\" type=\"image/png\" href={favicon} />\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400;0,600;0,700;0,900;1,400&display=swap\" rel=\"stylesheet\"/>      \r\n      </Helmet>\r\n      <Navigation />\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}